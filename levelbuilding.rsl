inc "aslalg.mlb" % Helper files for aslalg.sml
inc "aslalg.sml" % Functions to drive algorithm
inc "levelbuilding-external.sml" % Interp to string, etc

interp:
    testFrames: int list
    trainedWords: string list
    maxLevel : int
    levelNum : int
    levelWord : string
    levelScores : real list
    levelPrevs : int list

fn main ( inFile ) {
    ML {
        val test = "/home/bholm/USF-ASL-Data-Set-v2/Sentence 2.5 lipread cannot i"
        val train = "/home/bholm/USF-ASL-Data-Set-v2"
        (*val _ = aslalgLoad train test*)
        (*val itemMap = itemIndexMap()*)
    }

    [Init] munge: setDirs( test, train )
    [LoadVideo] update testFrames: trainAndLoad()
    [GetTrainedWords] update trainedWords: getWords()
    [FirstLevel] update maxLevel, levelNum, levelWord,
                        levelScores, levelPrevs: firstLevel()

    [LevelCheck] while all belowMaxLevel( 20 ) {
        [OnlyHighestLevel] if atMax() {
            accept
        }
    }

    print ifile
}
